apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deployment.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: us.gcr.io/docai-neuron/doc.ai/{{ .Values.name }}:{{ .Values.deployment.docker_tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.service.targetport }}
          protocol: TCP
        env:
        {{- range $key, $value := .Values.deployment.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- range $key, $value := .Values.deployment.secretEnv }}
        - name: "{{ $key }}"
          valueFrom:
            secretKeyRef:
              key: "{{ $value.key }}"
              name: "{{ $value.name }}"
        {{- end }}
        {{- if .Values.deployment.liveness_probe }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        {{- end }}
        {{- if .Values.deployment.readiness_probe }}
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health-check
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        {{- end }}
      - name: cloudsql-proxy
        command:
        - /cloud_sql_proxy
        - --dir=/cloudsql
        - -instances={{ .Values.config.postgresql_connection_string }}
        - -credential_file=/secrets/cloudsql/credentials.json
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /secrets/cloudsql
          name: cloudsql-instance-credentials
          readOnly: true
        - mountPath: /cloudsql
          name: cloudsql
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: accent-service-account
        - emptyDir: {}
          name: cloudsql
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
